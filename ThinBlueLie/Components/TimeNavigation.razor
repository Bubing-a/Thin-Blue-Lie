@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@inject NavigationManager navManager

<style>
    .e-tip-content .e-calendar {
        border: none !important;
        background-color: white !important;
    }
</style>
<div class="d-flex mb-2" style="flex-wrap:wrap;">
    <div class="col-md-10">
        <Timeline Date="(DateTime)Date" @ref="Timeline"></Timeline>
    </div>
    <div class="col-md-2 mt-md-auto mt-2 pl-0 w-100 d-inline-flex justify-content-center">
        <SfTooltip CssClass="e-tooltip-css d-inline-block" Target=".calendar-button" OpensOn="Focus">
            <TooltipTemplates>
                <Content>
                    <SfCalendar TValue="DateTime?" Min="InformationBase.MinDate" Max="DateTime.Today" @bind-Value="Date">
                        <CalendarEvents TValue="DateTime?" ValueChange="@SetDay"></CalendarEvents>
                    </SfCalendar>
                </Content>
            </TooltipTemplates>
            <SfButton CssClass="e-outline text mx-1 calendar-button" IsPrimary="true" Content="Calendar"></SfButton>
        </SfTooltip>
        <SfButton CssClass="e-outline text mx-1" IsPrimary="true"><a href="@("/Events/" + DateTime.Today.ToString("yyyy-MM-dd"))">Today</a></SfButton>
    </div>
</div>
@code {
    [Parameter]
    public DateTime? Date { get; set; }
    Timeline Timeline;
    private async Task SetDay()
    {
        var currentUri = new Uri(navManager.Uri);
        if (currentUri.Segments.Length == 2 || currentUri.Segments[2].TrimEnd('/') != Date?.ToString("yyyy-MM-dd")) //if url does not match current date or doesnt have a current date
        {
            string newUrl = new Uri(currentUri, "/Events").AbsoluteUri + "/" + Date?.ToString("yyyy-MM-dd");
            navManager.NavigateTo(newUrl);
        }
        await Timeline.LoadFromNewDate((DateTime)Date);
    }
}

@page "/test"
@using ThinBlueLie.Helper.Extensions
@using Syncfusion.Blazor.DropDowns
@using System.Linq;
@using System.Reflection;
@using System.ComponentModel.DataAnnotations;

<div class="w-75 mt-5 container">
    <Syncfusion.Blazor.Buttons.SfButton OnClick="resetColor">rtxdctfv</Syncfusion.Blazor.Buttons.SfButton>
    <SfDropDownList TItem="string" TValue="Colors?" PopupHeight="230px" Placeholder="Color" @bind-Value="@person.FavoriteColor" DataSource="@colors">
    </SfDropDownList>
    <h3>@person.FavoriteColor</h3>
</div>
@code{
    public Person person { get; set; } = new Person();
    protected override void OnInitialized()
    {
        person.FavoriteColor = Colors.Orange;
        resetColor();
    }
    void resetColor()
    {
        person.FavoriteColor = Colors.Orange;
    }

    public class Person
    {
        public string Name { get; set; }
        public Colors? FavoriteColor { get; set; }
    }
    public enum Colors
    {
        [Display(Name = "The Color Red")]
        Red,
        [Display(Name = "The Color Orange")]
        Orange,
        [Display(Name = "The Color Green")]
        Green,
        [Display(Name = "The Color Blue")]
        Blue
    }

    public IEnumerable<string> colors = GetEnumDisplayNames<Colors>();

    public static List<string> GetEnumDisplayNames<T>()
    {
        var type = typeof(T);
        return Enum.GetValues(type)
                   .Cast<T>()
                   .Select(x => type.GetMember(x.ToString())
                   .First()
                   .GetCustomAttribute<DisplayAttribute>()?.Name ?? x.ToString())
                   .ToList();
    }
}

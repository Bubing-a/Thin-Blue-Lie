@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Buttons
@using ThinBlueLie.Helper.Algorithms.WebsiteProfiling


@if (news.HasData == false)
{
    <p>Loading</p>
}
else if (news.Error == true)
{
    <p class="text-danger">Something went wrong, check your link</p>
}
else
{
    <SfCard ID="SideCard">
        <CardImage Image="@news.Image?.ToString()" />
        <CardHeader Title="@news.Title" />
        @if (ShortVersion == false)
        {
            <CardContent Content="@news.Description" />
            <CardFooter>
                <CardFooterContent>
                    <a class="e-btn e-outline e-primary" href="@news.Url.ToString()" target="_blank" rel="noopener noreferrer">Read More</a>
                    <span class="float-right">@news.SiteName</span>
                </CardFooterContent>
            </CardFooter>
        }
    </SfCard>
}

@code {
    [Parameter]
    public string newsUrl { get; set; }
    [Parameter]
    public bool ShortVersion { get; set; }
    public MetaTags news { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        news = new MetaTags(newsUrl); //initialized with HasData = false
        Uri uriResult;
        bool isUrl = Uri.TryCreate(newsUrl, UriKind.Absolute, out uriResult)
            && (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps);
        if (isUrl)
        {
            news = await MetaScraper.GetMetaData(newsUrl); //Filling out with data later.
        }
        else
        {
            news.Error = true;
        }
    }
}

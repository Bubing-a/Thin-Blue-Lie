@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using ThinBlueLie.Helper.Extensions

<div class="AddOfficer mt-2">
    <div class="card border-dark mb-3 mx-auto">
        <div class="card-body text-dark pt-2">
            <div @onclick="@(() => DeleteOfficer.InvokeAsync(officer.Rank))" @onclick:stopPropagation="false" @onclick:preventDefault class="position-absolute d-inline-flex" style="right: 5px; top:0px; z-index:2;">
                <SfButton IconCss="e-icons e-close-icon" IsPrimary="true" CssClass="e-flat e-custom"></SfButton>
            </div>
            <div class="form-row position-relative">
                <div class="my-2 ml-1" style="width:71%">
                    <SfTextBox Enabled="@(officer.SameAsId != null? false: true)" CssClass="e-filled" Placeholder="Name" FloatLabelType="@FloatLabelType.Always" @bind-Value="officer.Name" @onchange="(()=> SuggestOfficers.InvokeAsync(new SimilarPersonCallback { Name = officer.Name, Index = officer.Rank }))"></SfTextBox>
                    <ValidationMessage For="@(() => officer.Name)"></ValidationMessage>
                </div>
                <div class="ml-2 my-2 w-25">
                    <SfNumericTextBox Placeholder="Age" Decimals=0 ValidateDecimalOnType="true" TValue="int?" Min=0 Max=130 Step=1
                                      @bind-Value="officer.Age" FloatLabelType="@FloatLabelType.Always"></SfNumericTextBox>
                    <ValidationMessage For="@(() => officer.Age)"></ValidationMessage>
                </div>               
            </div>
            <div class="form-row position-relative my-2">
                <div class="col-6">
                    <SfDropDownList Enabled="@(officer.SameAsId != null? false: true)" TItem="EnumExtensions.ListItem" TValue="TimelineinfoEnums.RaceEnum?" PopupHeight="230px" Placeholder="Race" @bind-Value="@officer.Race" DataSource="@Races">
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                    <ValidationMessage For="@(() => officer.Race)"></ValidationMessage>
                </div>
                <div class="col-6">
                    <SfDropDownList Enabled="@(officer.SameAsId != null? false: true)" TItem="EnumExtensions.ListItem" TValue="TimelineinfoEnums.SexEnum?" PopupHeight="230px" Placeholder="Sex" @bind-Value="@officer.Sex" DataSource="@Sexes">
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                    <ValidationMessage For="@(() => officer.Sex)"></ValidationMessage>
                </div>
            </div>
            <div class="form-row">
                <div class="col-6 form-field">
                    <label class="form-check-label">
                        Type of Misconduct
                    </label>
                    <SfMultiSelect Mode="@VisualMode.Box" Placeholder="Miconducts" @bind-Value="@officer.Misconduct" DataSource="@MisconductsList">
                        <MultiSelectFieldSettings Text="Text" Value="Value"></MultiSelectFieldSettings>
                    </SfMultiSelect>
                    <ValidationMessage For="@(() => officer.Misconduct)"></ValidationMessage>
                </div>
                <div class="col-6">
                    <label class="form-check-label">
                        Type of Weapon
                    </label>
                    <SfMultiSelect Mode="@VisualMode.Box" Enabled="@(officer.Misconduct != null? officer.Misconduct.Contains(1)? true : false : false)" Placeholder="Weapons" @bind-Value="@officer.Weapon" DataSource="@WeaponsList">
                        <MultiSelectFieldSettings Text="Text" Value="Value"></MultiSelectFieldSettings>
                    </SfMultiSelect>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ViewOfficer officer { get; set; }
    [Parameter]
    public bool isSubmit { get; set; }
    protected override void OnInitialized()
    {
        if (isSubmit)
        {
            officer.Misconduct = new int[] { };
            officer.Weapon = new int[] { };
        }

    }

    [Parameter]
    public EventCallback<int> DeleteOfficer { get; set; }
    [Parameter]
    public EventCallback<SimilarPersonCallback> SuggestOfficers { get; set; }

    public IEnumerable<EnumExtensions.ListItem> Races = EnumExtensions.GetEnumDisplayNames<TimelineinfoEnums.RaceEnum>();
    public IEnumerable<EnumExtensions.ListItem> Sexes = EnumExtensions.GetEnumDisplayNames<TimelineinfoEnums.SexEnum>();

    IReadOnlyList<EnumExtensions.ListItem> MisconductsList = EnumExtensions.GetDropdownList<TimelineinfoEnums.MisconductEnum>.Items;
    IReadOnlyList<EnumExtensions.ListItem> WeaponsList = EnumExtensions.GetDropdownList<TimelineinfoEnums.WeaponEnum>.Items;

}

@using DiffPlex.DiffBuilder;
@using DiffPlex.DiffBuilder.Model;
@using ThinBlueLie.Helper.Algorithms
@using KellermanSoftware.CompareNetObjects
@inject ISideBySideDiffBuilder sideBySide

@if (Done == false)
{
    <h6>Loading...</h6>
}
else
{
    <div class="d-block">
        <h5 class="border-bottom">Officer@(Officers.Count > 1? "s'" : "'s") Information</h5>
        @foreach ((var officerPair, Int32 i) in Officers.Select((officer, i) => (officer, i)))
        {
            if (!(compareLogic.Compare(officerPair.Item2, officerPair.Item1).AreEqual && EditsOnly == true))
            {
                <CompareOfficerSingle Model="Officerdiff[i]" OfficerPair="officerPair"></CompareOfficerSingle>
            }
        }
    </div>
}

@code {
    [CascadingParameter(Name = "EditsOnly")]
    public bool EditsOnly { get; set; }
    private int id;
    [CascadingParameter]
    public int Id
    {
        get { return id; }
        set { id = value; isNewEdit = true; }
    }
    bool isNewEdit = true;
    private List<Tuple<DBOfficer, DBOfficer>> Officers { get; set; }
    [Parameter]
    public List<DBOfficer> OldOfficers { get; set; }
    [Parameter]
    public List<DBOfficer> NewOfficers { get; set; }
    bool Done = false;
    private List<SideBySideDiffModel?> Officerdiff = new List<SideBySideDiffModel?>();
    CompareLogic compareLogic = new CompareLogic();
    protected override void OnParametersSet()
    {
        if (isNewEdit)
        {
            Officers = new List<Tuple<DBOfficer, DBOfficer>>();

            var PairOfficers = new PairVersions();
            Officers = PairOfficers.PairOfficers(OldOfficers, NewOfficers);
            foreach (var pairing in Officers)
            {
                try
                {
                    //try to compare officers with the same idOfficer and build a model off of that
                    Officerdiff.Add(sideBySide.BuildDiffModel(pairing.Item1.Name, pairing.Item2.Name));
                }
                catch (NullReferenceException)
                {
                    Officerdiff.Add(null);
                }
            }
            Done = true;
        }
    }
}

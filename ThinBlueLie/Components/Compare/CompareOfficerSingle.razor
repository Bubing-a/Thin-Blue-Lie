@using DiffPlex.DiffBuilder.Model;
@using static ThinBlueLie.Helper.Extensions.StringExtensions
@using KellermanSoftware.CompareNetObjects 

<div class="row my-2 border-bottom">
    @if (IsNewEvent == false && !AreEqual)
    {
        <div class="col-6 px-4 border-right @((OfficerPair.Item1 != null && OfficerPair.Item2 == null)? "deleted-item" : "")">
            @if (OfficerPair.Item1 != null)
            {
                <p class="font-weight-bold">
                    @if (Model != null)
                    {
                        <CompareLine Model="Model.OldText.Lines.FirstOrDefault()"></CompareLine>
                    }
                    else
                    {
                        @(OfficerPair.Item1.Name != null? OfficerPair.Item1.Name : "Unnamed")
                    }
                </p>
                @if (OfficerPair.Item2 != null)
                {
                    <span>
                        @((MarkupString)(GetComparePersonSummary(
                        new CommonPerson { Age = OfficerPair.Item1.Age, Sex = OfficerPair.Item1.Sex, Race = OfficerPair.Item1.Race },
                        new CommonPerson { Age = OfficerPair.Item2.Age, Sex = OfficerPair.Item2.Sex, Race = OfficerPair.Item2.Race },
                        true
                        )))
                    </span>
                }
                else
                {
                    <span>
                        @((MarkupString)(GetComparePersonSummary(
                        new CommonPerson { Age = OfficerPair.Item1.Age, Sex = OfficerPair.Item1.Sex, Race = OfficerPair.Item1.Race },
                        new CommonPerson { Age = OfficerPair.Item1.Age, Sex = OfficerPair.Item1.Sex, Race = OfficerPair.Item1.Race },
                        true
                        )))
                    </span>
                }               
            }
        </div>
    }
    <div class="@(IsNewEvent? "col-12" : AreEqual? "" : "col-6") px-4 border-left @(AreEqual? "mx-auto" : "")
                    @((OfficerPair.Item2 != null && OfficerPair.Item1 == null && !IsNewEvent)? "inserted-item" : "")"
         style="min-width:250px;">
        @if (OfficerPair.Item2 != null)
        {
            <p class="font-weight-bold">
                @if (Model != null)
                {
                    <CompareLine Model="Model.NewText.Lines.FirstOrDefault()"></CompareLine>
                }
                else
                {
                    @(OfficerPair.Item2.Name != null? OfficerPair.Item2.Name : "Unnamed")
                }
            </p>
            @if (OfficerPair.Item1 != null)
            {
                <span>
                    @((MarkupString)(GetComparePersonSummary(
                    new CommonPerson { Age = OfficerPair.Item1.Age, Sex = OfficerPair.Item1.Sex, Race = OfficerPair.Item1.Race },
                    new CommonPerson { Age = OfficerPair.Item2.Age, Sex = OfficerPair.Item2.Sex, Race = OfficerPair.Item2.Race },
                    false
                    )))
                </span>
            }
            else
            {
                <span>
                    @((MarkupString)(GetComparePersonSummary(
                    new CommonPerson { Age = OfficerPair.Item2.Age, Sex = OfficerPair.Item2.Sex, Race = OfficerPair.Item2.Race },
                    new CommonPerson { Age = OfficerPair.Item2.Age, Sex = OfficerPair.Item2.Sex, Race = OfficerPair.Item2.Race },
                    false
                    )))
                </span>
            }           
        }
    </div>
</div>


@code {
    [Parameter]
    public Tuple<Officer, Officer> OfficerPair { get; set; }
    [Parameter]
    public SideBySideDiffModel? Model { get; set; }
    [CascadingParameter(Name = "IsNewEvent")]
    public bool IsNewEvent { get; set; }
    CompareLogic compareLogic;
    bool AreEqual;
    protected override void OnParametersSet()
    {
        compareLogic = new();
        AreEqual = compareLogic.Compare(OfficerPair.Item2, OfficerPair.Item1).AreEqual;
    }
}

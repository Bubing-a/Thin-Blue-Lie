@using DiffPlex.DiffBuilder;
@using DiffPlex.DiffBuilder.Model;
@using ThinBlueLie.Helper.Algorithms 
@inject ISideBySideDiffBuilder sideBySide

@if (Done == false)
{
    <h6>Loading...</h6>
}
else
{
<div class="d-block">
    <h5 class="border-bottom">Media Information</h5>
    @foreach ((var mediaPair, Int32 i) in Medias.Select((officer, i) => (officer, i)))
    {
        <CompareMediaSingle Model="Mediadiff[i]" Media="mediaPair"></CompareMediaSingle>
    }
</div>
}

@code {
    private List<Tuple<ViewMedia, ViewMedia>> Medias { get; set; }
    [Parameter]
    public List<ViewMedia> OldMedias { get; set; }
    [Parameter]
    public List<ViewMedia> NewMedias { get; set; }
    bool Done = false;
    private List<SideBySideDiffModel?> Mediadiff;

    //TODO this same code appears in CompareOfficers and CompareSubjects too, consolidate it into a generic method
    protected override void OnParametersSet()
    {
        Medias = new List<Tuple<ViewMedia, ViewMedia>>();
        PairVersions pair = new PairVersions();
        Medias = pair.PairMedia(OldMedias, NewMedias);
        Mediadiff = new List<SideBySideDiffModel?>();
        foreach (var pairing in Medias)
        {
            try
            {
                //try to compare Medias with the same idMedia and build a model off of that
                Mediadiff.Add(sideBySide.BuildDiffModel(pairing.Item1.Blurb, pairing.Item2.Blurb));
            }
            catch (NullReferenceException)
            {
                Mediadiff.Add(null);
            }
        }
        Done = true;
    }
}

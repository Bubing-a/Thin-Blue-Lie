@page "/Events/{Date:datetime}/{Title}"
@page "/Events/{Date:datetime}"
@page "/Events"
@using ThinBlueLie.Helper.Extensions
@using Syncfusion.Blazor.Spinner
@using HtmlAgilityPack
@using static ThinBlueLie.Helper.Extensions.StringExtensions


<Meta Property="og:type" Content="article" />
@if (EventExists && (Event.Data?.Context != null))
{
    <Title>@Event.Data.Title - Thin Blue Lie</Title>
    <Meta Property="og:title" Content="@(Event.Data.Title + " - Thin Blue Lie")" />
    <Meta Property="og:image" Content="@(Event.Medias.FirstOrDefault()?.Thumbnail ?? "https://via.placeholder.com/150")" />

    HtmlDocument htmlDoc = new HtmlDocument();
    htmlDoc.LoadHtml(Event.Data.Context);
    string result = htmlDoc.DocumentNode.InnerText;
    <Meta Name="description" Content="@(TruncateString(result, 165))" />

    <Meta Property="article:published_time" Content="@Event.Data.Timestamp.ToUniversalTime().ToString()" />
    <Meta Property="article:modified_time" Content="@Event.Data.EventUpdated.ToUniversalTime().ToString()" />
}
else if (MultipleEvents)
{
    <Title>@Date?.ToShortDateString() - Thin Blue Lie</Title>
    <Meta Property="og:title" Content="@(Date?.ToShortDateString() + " - Thin Blue Lie")" />
}
else
{
    <Meta Name="robots" Content="noindex" />
    <Title>Events - Thin Blue Lie</Title>
}


<TimeNavigation Date="Date"></TimeNavigation>


@if (MultipleEvents && Title == null)
{
    <h5 class="text-center col-10 mt-3">@Date?.ToLongDateString()</h5>
    <div class="container mt-1">
        <div class="border px-3 py-2">
            @foreach (var evnt in DatesEvents)
            {
                <div class="py-2 row">
                    <div class="col-8">
                        <h5><a href="@("/Events/" + Date?.ToString("yyyy-MM-dd") + "/" + UriExtensions.CreateTitleUrl(evnt.Title))">@evnt.Title</a></h5>
                        <p>@evnt.Context</p>
                    </div>
                    <div class="col-4">
                        <img alt="@evnt.Media.Blurb" style="max-height:175px;" src="@evnt.Media.Thumbnail" />
                    </div>
                </div>
            }
        </div>
    </div>
}
else if (EventExists)
{
    <div class="mx-3">
        <div class="row">
            <div class="col-lg-9 event-main-row">
                <MediaCarousel Media="Event.Medias"></MediaCarousel>
            </div>
            <div class="col-lg-3">
                <CascadingValue Value="@(User?.RepAuthorizer(ReputationEnum.Privileges.EditLocked) ?? false)">
                    <DataCard Information="Event.Data" Officers="Event.Officers" Subjects="Event.Subjects" Misconducts="Event.Misconducts"></DataCard>
                </CascadingValue>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-9">
                @*Context Section*@
                <div class="border-bottom">
                    <h5 style="margin-left: 6%; font-size:30px;" class="mt-2 mb-0"> <strong>Context</strong></h5>
                </div>
                @if (Event.Data.Context == null)
                {
                    <div class="col-lg-9">
                        <div class="mx-auto">
                            <SfSpinner Type="@SpinnerType.Material"></SfSpinner>
                        </div>
                    </div>
                }
                else
                {
                    <article>
                        <div class="context indent px-md-3 pt-2">
                            @((MarkupString)Event.Data.Context)
                        </div>
                    </article>
                }
            </div>
            <div class="col-lg-3">
                <div class="container-fluid border-bottom mb-2">
                    <h4 class="mt-3 mb-0">
                        <strong>News Articles</strong>
                    </h4>
                </div>
                @foreach (var newsItem in Event.Medias.Where(m => (MediaEnums.MediaTypeEnum)m.MediaType == MediaEnums.MediaTypeEnum.News))
                {
                    <NewsCard newsUrl="@newsItem.SourcePath"></NewsCard>
                }
            </div>
        </div>
    </div>
}
else if (FakeEvent)
{
    <h4 class="text-center mt-4">Oops, something went wrong! Please double-check your link</h4>
}
else if (NoEvents)
{
    <div style="height:60vh;">
        <h4 class="text-center mt-4">There are no recorded events on this day</h4>
    </div>
}
else
{
    <SfSpinner Type="SpinnerType.Material"></SfSpinner>
}
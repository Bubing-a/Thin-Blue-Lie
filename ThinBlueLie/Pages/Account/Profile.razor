@page "/Account/Profile"
@layout AccountLayout
@using Syncfusion.Blazor.ProgressBar
@using Microsoft.AspNetCore.Identity
@using DataAccessLibrary.UserModels
@using ThinBlueLie.Helper.Extensions
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using static ThinBlueLie.Helper.Extensions.EnumExtensions
@using static DataAccessLibrary.Enums.ReputationEnum


<Title>Profile - Thin Blue Lie</Title>
<Meta Name="robots" Content="noindex" />


<div class="sidebar-content pl-2" style="margin-right: 0px; transform: translateX(0px); margin-left: 159.991px;">
    <div class="d-flex pl-4 justify-content-between border-bottom" style="font-size:1.2rem;">
        <div>@userState.User.Identity.Name</div>
        @if (Loading == false)
        {
            <div>Member Since: @User.DateJoined.ToString("D")</div>
        }
    </div>
    <div class="border-bottom row px-3 pt-2">
        @if (Loading == false)
        {
            <div class="col-6">
                <h5><a href="/About/Reputation">Reputation</a></h5>
                <h6>Granted Perms</h6>
                <ul>
                    @foreach (Privileges privilege in Enum.GetValues(typeof(Privileges)))
                    {
                        @if (User.Reputation > (int)privilege)
                        {
                            <li>
                                @GetEnumDisplayName(privilege)
                            </li>
                        }
                    }
                </ul>
            </div>
            <div class="col-6">
                <div>
                    @{
                        bool FullUser = User.Reputation > (int)Enum.GetValues(typeof(Privileges)).Cast<Privileges>().Max();
                    }
                    <div>
                        Total Reputation: @User.Reputation
                    </div>
                    <div>
                        Next Privilege: @(FullUser? "You have all Privileges" : GetEnumDisplayName(User.NextPrivilege()))
                    </div>
                    @if (!FullUser)
                    {
                        <SfProgressBar Type="ProgressType.Linear" Height="35"
                                       ID="Percentage"
                                       TrackThickness="24"
                                       ProgressThickness="24" Role="ModeType.Success"
                                       ShowProgressValue="true"
                                       Value="User.Reputation - (int)User.CurrentPrivilege()"
                                       Minimum="0"
                                       Maximum="((int)User.NextPrivilege() - (int)User.CurrentPrivilege())"
                                       Theme="@Syncfusion.Blazor.Theme.Bootstrap4">
                            <ProgressBarLabelStyle Text="@((User.Reputation - (int)User.CurrentPrivilege()) + "/"
                                                                    + ((int)User.NextPrivilege() - (int)User.CurrentPrivilege()))"
                                                   TextAlignment="TextAlignmentType.Center" Color="#FFFFFF" />
                            <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                        </SfProgressBar>
                    }
                </div>
            </div>
        }
        else
        {
            <h6>Loading...</h6>
        }
    </div>
    <div class="row px-3 pt-2">
        <div class="col-lg-3 col-6">
            <p>
                <b>Submissions: </b>@profile.Submissions?.Count()
            </p>
            <p>
                <b>Edits Accepted: </b>@profile.AcceptedEdits
            </p>
        </div>
        <div lass="col-lg-3 col-6">
            <p>
                <b>Flags: </b>@profile.Flags
            </p>
            <p>
                <b>Votes Cast: </b>@profile.AcceptedEdits
            </p>
        </div>
    </div>
    <div style="width:100%">
        <SfGrid DataSource="@profile.Submissions" AllowSelection="false" AllowFiltering="true"
                EnableVirtualization="true" Height="300" AllowResizing="true">
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
            <GridPageSettings PageCount="5"></GridPageSettings>
            <GridColumns>
                <GridColumn HeaderText="Type" Width="15">
                    <Template>
                        @{
                            var Event = (context as ProfileInfo);
                            <span>@(Event.IsNewEvent ? "New Event" : "Edit")</span>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Status) HeaderText="Status" Width="15">
                    <Template>
                        @{
                            var Status = (context as ProfileInfo).Status;
                            if (Status == 1)
                            {
                                <span class="text-success">Confirmed</span>
                            }
                            else if (Status == 2)
                            {
                                <span class="text-danger">Denied</span>
                            }
                            else
                            {
                                <span class="text-info">Pending</span>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Timestamp) HeaderText="Date Posted" Format="d" Width="15"></GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Date) HeaderText="Event's Date" Width="15" Format="d"></GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Title) HeaderText="Title" Width="50"></GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Owner) HeaderText="Owner" Width="15">
                    <Template>
                        @{
                            var owner = (context as ProfileInfo).Owner;
                            <span>@(owner != 0? "You" : "Community") </span>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.IdTimelineinfo) HeaderText="Actions" Width="10">
                    <Template>
                        @{
                            var Event = (context as ProfileInfo).IdTimelineinfo;
                            //TODO Implement delete event
                            @*<SfButton IsPrimary="true" CssClass="e-outline e-danger" IconCss="e-icons e-delete"></SfButton>*@
                            <SfButton IsPrimary="true" CssClass="e-outline e-info edit-button" IconCss="e-icons e-edit">
                                <a href="Edit?id=@Event"></a>
                            </SfButton>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(ProfileInfo.Updated) HeaderText="Last Updated" Width="15" Format="d"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>

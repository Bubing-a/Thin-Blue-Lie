@using DataAccessLibrary.DataModels;
@{
    Layout = null;
    var Dates = ViewData["Dates"] as DateTime[];
    var Day = ViewData["DateData"] as List<List<Timelineinfo>>;
}


<div onclick="PrevWeek()" id="triangle-left"> <div class="empty"></div></div>
@foreach ((var day, Int32 i) in Day.Select((day, i) => (day, i)))
{
    <div class="week btn" onclick='location.href = "?d=@Dates[i].Year-@Dates[i].Month.ToString().PadLeft(2, '0')-@Dates[i].Day.ToString().PadLeft(2, '0')"'>
        <div class="timeline-label">
            <span>@Dates[i].DayOfWeek</span>
            <span> @Dates[i].Month/@Dates[i].Day</span>
        </div>
        <div class="badge-bar">
            <svg class="badge">
                <circle cx="13" cy="13" r="12" stroke="DarkBlue" stroke-width="2" fill="#dedede" />
                <text x="8" y="18" fill="black">@day.Count</text>
            </svg>
        </div>
        <input type="radio">
    </div>
}
<div onclick="NextWeek()" id="triangle-right"><div class="empty"></div></div>

<script>
    function NextWeek() {
        $("#timelineDiv").load('@Url.Action("GetTimeline", "Timeline")', { current: '@Dates[0].Date.ToString("yyyy-MM-dd")', dateChange: 7 });
    }
    function PrevWeek() {
        $("#timelineDiv").load('@Url.Action("GetTimeline", "Timeline")', { current: '@Dates[0].Date.ToString("yyyy-MM-dd")' , dateChange: -7});
    }
</script>

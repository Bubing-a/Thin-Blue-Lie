@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using ThinBlueLieB.Helper

<div class="AddOfficer mt-2">
    <div class="card border-dark mb-3 mx-auto">
        <div class="card-body text-dark pt-2">
            <div @onclick="@(() => DeleteOfficer.InvokeAsync(officer.ListIndex))" @onclick:stopPropagation="false" @onclick:preventDefault class="position-absolute d-inline-flex" style="right: 5px; top:0px; z-index:1000;">
                <SfButton IconCss="e-icons e-close-icon" IsPrimary="true" CssClass="e-flat e-custom"></SfButton>
            </div>
            <div class="form-row position-relative">
                <div class="my-2 ml-1" style="width:71%">
                    <SfTextBox CssClass="e-filled" Placeholder="Name" FloatLabelType="@FloatLabelType.Always" @bind-Value="officer.Name" @onchange="(()=> SuggestOfficers.InvokeAsync(officer.Name))" ></SfTextBox>
                </div>
                <div class="ml-2 my-2 w-25">
                    <SfNumericTextBox Placeholder="Age" Decimals=0 ValidateDecimalOnType="true" TValue="int?" Min=0 Max=130 Step=1
                                      @bind-Value="officer.Age" FloatLabelType="@FloatLabelType.Always"></SfNumericTextBox>
                </div>
                <button type="button" class="close position-absolute" aria-label="Close" style="left: 98%;">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="form-row position-relative my-2">
                <div class="col-6">
                    <SfDropDownList TItem="Extensions.ListItem" TValue="byte" PopupHeight="230px" FloatLabelType="@FloatLabelType.Auto" Index="1" Placeholder="Race" @bind-Value="@officer.Race" DataSource="@Races">
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
                <div class="col-6">
                    <SfDropDownList TItem="Extensions.ListItem" TValue="byte" PopupHeight="230px" FloatLabelType="@FloatLabelType.Auto" Index="2" Placeholder="Sex" @bind-Value="@officer.Sex" DataSource="@Sexes">
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
            </div>
            <div class="form-row">
                <div class="col-6 form-field">
                    <label class="form-check-label">
                        Type of Misconduct
                    </label>
                    <SfMultiSelect TValue="int[]" Mode="@VisualMode.Box" Placeholder="Miconducts" @bind-Value="@MisconductsVal" DataSource="@MisconductsList">
                        <MultiSelectFieldSettings Text="Text" Value="Value"></MultiSelectFieldSettings>
                    </SfMultiSelect>
                </div>
                <div class="col-6">
                    <label class="form-check-label">
                        Type of Weapon
                    </label>
                    <SfMultiSelect TValue="int[]" Mode="@VisualMode.Box" Placeholder="Weapons" @bind-Value="@WeaponsVal" DataSource="@WeaponsList">
                        <MultiSelectFieldSettings Text="Text" Value="Value"></MultiSelectFieldSettings>
                    </SfMultiSelect>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ViewOfficer officer { get; set; }

    [Parameter]
    public EventCallback<int> DeleteOfficer { get; set; }
    [Parameter]
    public EventCallback<string> SuggestOfficers { get; set; }

    IReadOnlyList<Extensions.ListItem> Sexes = Extensions.GetDropdownList<TimelineinfoEnums.SexEnum>.Items;
    IReadOnlyList<Extensions.ListItem> Races = Extensions.GetDropdownList<TimelineinfoEnums.RaceEnum>.Items;

    public int[] MisconductsVal { get; set; } = new int[] { };
    public int[] WeaponsVal { get; set; } = new int[] { };

    IReadOnlyList<Extensions.ListItem> MisconductsList = Extensions.GetDropdownList<TimelineinfoEnums.MisconductEnum>.Items;
    IReadOnlyList<Extensions.ListItem> WeaponsList = Extensions.GetDropdownList<TimelineinfoEnums.WeaponEnum>.Items;

}

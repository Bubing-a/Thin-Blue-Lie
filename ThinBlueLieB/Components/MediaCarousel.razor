@using ThinBlueLieB.Helper.Algorithms 
@using Syncfusion.Blazor.Spinner 
<style>
   

    .ytp-pause-overlay {
        display: none;
    }

    .swiper-container {
        width: 100%;
        height: 300px;
        margin-left: auto;
        margin-right: auto;
    }

    .swiper-slide {
        background-size: cover;
        background-position: center;
    }

    .gallery-top {
        height: 80%;
        width: 100%;
    }

    .gallery-thumbs {
        height: 20%;
        box-sizing: border-box;
        padding: 10px 0;
    }

        .gallery-thumbs .swiper-slide {
            width: 25%;
            height: 100%;
            opacity: 0.4;
        }

        .gallery-thumbs .swiper-slide-thumb-active {
            opacity: 1;
        }

    .swiper-slide iframe {
        width: 100%;
        height: 100%;
    }
    .video {
        position: relative;
        overflow: hidden;
        display: inline-block;
    }

    .play-button {
        position: absolute;
        display: block;
        width: 20%;
        top: 50%;
        left: 50%;
        margin: -10% 0 0 -8%;
    }
</style>
@if (Media == null)
{
        <div class="col-lg-9">
            <div class="mx-auto">
                <SfSpinner Type="@SpinnerType.Material"></SfSpinner>
            </div>
        </div>
}
else
{
<div class="swiper-container gallery-top">
    <div class="swiper-wrapper hytPlayerWrapOuter">
        @foreach (var media in Media)
        {
            if ((MediaEnums.MediaTypeEnum)media.MediaType == MediaEnums.MediaTypeEnum.Video)
            {
                <div class="swiper-slide hytPlayerWrap">
                    <iframe src="@LinkConverter.GetLinkFromData(media, true)"frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
            }
            else if (((MediaEnums.MediaTypeEnum)media.MediaType == MediaEnums.MediaTypeEnum.Image))
            {
                <div class="swiper-slide" style="
                   background-image: url(@LinkConverter.GetLinkFromData(media);">
                </div>
            }
        }
    </div>
    <!-- Add Arrows -->
    <div class="swiper-button-next swiper-button-white"></div>
    <div class="swiper-button-prev swiper-button-white"></div>
</div>
<div class="swiper-container gallery-thumbs">
    <div class="swiper-wrapper">        
        @foreach (var media in Media)
        {
            if ((MediaEnums.MediaTypeEnum)media.MediaType == MediaEnums.MediaTypeEnum.Video)
            {
                <div class="swiper-slide video"
                     style="background-image: url(@LinkConverter.GetLinkFromData(media)) ">
                    <img class="play-button" alt="play button overlay" src="/Assets/Play-Button.png" href="#" />
                </div>
            }
            else if(((MediaEnums.MediaTypeEnum)media.MediaType == MediaEnums.MediaTypeEnum.Image))
            {
                <div class="swiper-slide" style="
                   background-image: url(@LinkConverter.GetLinkFromData(media);">
                </div>
            }
        }
    </div>
</div>
}

@code {
    [Parameter]
    public List<Media>? Media { get; set; }

    string videoUrl = string.Empty;
    string imageUrl = string.Empty;

    protected override async Task OnParametersSetAsync()
    {

        //Media = Media.Where(m => m.MediaType == MediaEnums.MediaTypeEnum.Image || m.MediaType == MediaEnums.MediaTypeEnum.Video).ToList();
    }
    
    //get list of images and videos
    //type of media and information
    //if video get thumbnail and overlay a triangle

}

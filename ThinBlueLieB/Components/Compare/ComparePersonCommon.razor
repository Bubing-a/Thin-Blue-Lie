@using ThinBlueLieB.Helper
@using DiffPlex.DiffBuilder;
@using DiffPlex.DiffBuilder.Model;
@inject ISideBySideDiffBuilder sideBySide
@using static ThinBlueLieB.Helper.Extensions.EnumExtensions
@using static ThinBlueLieB.Helper.Extensions.StringExtensions
@using static DataAccessLibrary.Enums.TimelineinfoEnums


<div class="mb-1 d-flex @(Person.Image != OtherPerson?.Image? IsOriginal? "deleted-item" : "inserted-item" : "")">
    <img class="mx-auto" width="200px" height="200px" src="@GetImageOfPerson(Person.Image, Person.Local == 1? true : false)" />
</div>
<hr class="my-0" />
<span class="d-md-block">
    <b>Name:</b>
    @if (IsOriginal)
    {
        <CompareLine Model="PersonDiff.OldText.Lines.FirstOrDefault()"></CompareLine>
    }
    else
    {
        <CompareLine Model="PersonDiff.NewText.Lines.FirstOrDefault()"></CompareLine>
    }
</span>
<span class="d-md-block">
    <b>Race:</b>
    @if (IsOriginal)
    {
        @((MarkupString)SimpleCompare(GetEnumDisplayName((RaceEnum)Person.Race), OtherPerson != null? GetEnumDisplayName((RaceEnum)OtherPerson?.Race) : null, IsOriginal))
    }
    else
    {
        @((MarkupString)SimpleCompare(OtherPerson != null? GetEnumDisplayName((RaceEnum)OtherPerson?.Race) : null, GetEnumDisplayName((RaceEnum)Person.Race), IsOriginal))
    }
</span>
<span class="d-md-block">
    <b>Race:</b>
    @if (IsOriginal)
    {
        @((MarkupString)SimpleCompare(GetEnumDisplayName((SexEnum)Person.Sex), OtherPerson != null? GetEnumDisplayName((SexEnum)OtherPerson?.Sex) : null, IsOriginal))
    }
    else
    {
        @((MarkupString)SimpleCompare(OtherPerson != null? GetEnumDisplayName((SexEnum)OtherPerson?.Sex) : null, GetEnumDisplayName((SexEnum)Person.Sex), IsOriginal))
    }
</span>

@code{
    [Parameter]
    public CommonPerson Person { get; set; }
    [Parameter]
    public CommonPerson OtherPerson { get; set; }
    [Parameter]
    public bool IsOriginal { get; set; }

    private SideBySideDiffModel PersonDiff = new SideBySideDiffModel();

    protected override void OnParametersSet()
    {
        if (IsOriginal)
            PersonDiff = sideBySide.BuildDiffModel(Person.Name, OtherPerson != null ? OtherPerson.Name != null ? OtherPerson.Name : "Unknown Name" : string.Empty);
        else
            PersonDiff = sideBySide.BuildDiffModel(OtherPerson != null ? OtherPerson.Name != null ? OtherPerson.Name : "Unknown Name" : string.Empty, Person.Name);
    }

    string GetImageOfPerson(string url, bool IsLocal)
    {
        if (url == null)
        {
            return "/Assets/Empty-Profile-Picture.jpg";
        }
        else
        {
            if (IsLocal)
            {
                string imgLink = ConfigHelper.GetUploadsDirectory() + url + ".jpg";
                return imgLink;
            }
            else
            {
                string imgLink = url;
                return url;
            }
        }
    }

}

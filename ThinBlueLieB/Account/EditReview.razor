@page "/Account/ReviewEdits"
@inherits EditReviewBase
@using ThinBlueLieB.Bases
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Spinner

<style>
    ul {
        list-style-type: none;
    }

    li a {
        color: dimgray;
        font-size: 1rem;
    }

        li a:hover {
            color: black;
        }

    .edit-wrapper {
        padding: 0 40px;
        min-height: 400px;
    }

    .e-chevron-left:before {
        content: '\e70d';
        cursor: pointer;
    }

    .e-chevron-right:before {
        content: '\e76a';
        cursor: pointer;
    }
</style>
<AuthorizeView>
    <NotAuthorized>
        <h3>
            Please <a href="Account/Login">Log in</a> to view your profile
        </h3>
    </NotAuthorized>
    <Authorized>
        <div class="mx-5 mt-3">
            <SfSidebar Width="160px" Animate="false" EnableGestures="false" Target=".profile" MediaQuery="(min-width:600px)">
                <ChildContent>
                    <div class="main-menu nav-with-bar mt-1">
                        <ul class="mt-3">
                            <li>
                                <NavLink class="nav-link" href="/Account/Profile">Profile</NavLink>
                            </li>
                            <li>
                                <NavLink class="nav-link" href="/Account/ReviewEdits">Review Edits</NavLink>
                            </li>
                            <li>
                                <NavLink class="nav-link" href="/Account/Reputation">Reputation</NavLink>
                            </li>
                        </ul>
                    </div>
                </ChildContent>
            </SfSidebar>
            <div class="profile">
                <div class="sidebar-content pl-2">
                    <div class="d-flex border-bottom">
                        <div class="" style="font-size:1.2rem;">Edit Review</div>
                        <div style="left:47%;" class="position-absolute d-flex align-items-center">
                            <span @onclick="() => GetPreviousEdit()" class="e-icons e-chevron-left"></span>
                            @(PendingEditsCount == 0? 0 : ActiveIdIndex + 1)/@PendingEditsCount
                            <span @onclick="() => GetNextEdit()" class="e-icons e-chevron-right"></span>
                        </div>
                        @*<div class="d-flex">
                               <InputCheckbox>Display only Changes</InputCheckbox>
                            </div>*@
                    </div>
                    <div class="edit-wrapper">
                        @if (Loading)
                        {
                            <SfSpinner Visible="true" Type="SpinnerType.Material" Label="Loading....">
                            </SfSpinner>
                        }
                        else if (PendingEditsCount == 0 && Loading == false)
                        {
                            <div class="text-center container-fluid">
                                <h3 class="mt-5">There are no current Pending Edits</h3>
                            </div>
                        }
                        else
                        {
                            @if (Ids.ToArray()[ActiveIdIndex].IdTimelineinfo != null)
                             {
                                <CompareBasic Info="new Tuple<Timelineinfo, Timelineinfo>(Edits[ActiveIdIndex].Old.Data, Edits[ActiveIdIndex].New.Data)"></CompareBasic>
                                <CompareContext CollapseContent="false" OldContext="@Edits[ActiveIdIndex].Old.Data.Context" NewContext="@Edits[ActiveIdIndex].New.Data.Context">
                                    <Header Context="compare">
                                        <h6 style="padding: 12px; margin: 0px;">
                                            <span class="badge badge-primary">@($"{compare.LineModificationCount} Line Modifications")</span>
                                            <span class="badge badge-danger">@($"{compare.LineDeletionCount} Line Deletions")</span>
                                            <span class="badge badge-success">@($"{compare.LineAdditionCount} Line Additions")</span>

                                            <span class="badge badge-primary">@($"{compare.WordModificationCount} Word Modifications")</span>
                                            <span class="badge badge-danger">@($"{compare.WordDeletionCount} Word Deletions")</span>
                                            <span class="badge badge-success">@($"{compare.WordAdditionCount} Word Additions")</span>
                                        </h6>
                                    </Header>
                                </CompareContext>
                                <CompareMedias OldMedias="@Edits[ActiveIdIndex].Old.Medias" NewMedias="@Edits[ActiveIdIndex].New.Medias"></CompareMedias>
                                <CompareOfficers OldOfficers="@Edits[ActiveIdIndex].Old.Officers" NewOfficers="@Edits[ActiveIdIndex].New.Officers"></CompareOfficers>
                                <CompareSubjects OldSubjects="@Edits[ActiveIdIndex].Old.Subjects" NewSubjects="@Edits[ActiveIdIndex].New.Subjects"></CompareSubjects>
                             }
                            else if ((Edits[ActiveIdIndex].New.OfficerPerson != null || Edits[ActiveIdIndex].Old.OfficerPerson != null))
                            {
                                <CompareOfficerPerson NewOfficer="Edits[ActiveIdIndex].New.OfficerPerson" OldOfficer="Edits[ActiveIdIndex].Old.OfficerPerson"></CompareOfficerPerson>
                            }
                            else if ((Edits[ActiveIdIndex].New.SubjectPerson != null || Edits[ActiveIdIndex].Old.SubjectPerson != null))
                            {
                                <CompareOfficerPerson NewOfficer="Edits[ActiveIdIndex].New.OfficerPerson" OldOfficer="Edits[ActiveIdIndex].Old.OfficerPerson"></CompareOfficerPerson>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    //if user is
}

@page "/Account/Register"
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager
@inject NavigationManager NavManager
@using ThinBlueLieB.Models;

<div class="container-fluid h-100 row nogap">
    <div class="card border-secondary mx-md-auto col-lg-3 col-md-4 p-0 mx-5" style="margin-top:100px;">
        <div class="card-header">
            Register
            <a class="float-right" href="/Account/Login">Login</a>
        </div>
        <EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit">
            <div class="card-body text-secondary">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="Email" class="control-label">Email</label>
                    <InputText @bind-Value="registerModel.Email" class="form-control" />
                    <ValidationMessage For="@(()=> registerModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="Password" class="control-label">Password</label>
                    <InputText @bind-Value="registerModel.Password" class="form-control" />
                    <ValidationMessage For="@(()=> registerModel.Password)" />
                </div>
                <div class="form-group">
                    <label for="ConfirmPassword" class="control-label">Confirm Password</label>
                    <InputText @bind-Value="registerModel.ConfirmPassword" class="form-control" />
                    <ValidationMessage For="@(()=> registerModel.ConfirmPassword)" />
                </div>
                <div class="form-group">
                    <label for="Username" class="control-label">Username</label>
                    <InputText @bind-Value="registerModel.Username" class="form-control" />
                    <ValidationMessage For="@(()=> registerModel.Username)" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary mb-1" style="float:right">Register</button>
                </div>
            </div>
        </EditForm>
        <div class="card-footer">
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel;
    protected override Task OnInitializedAsync()
    {
        registerModel = new RegisterModel();
        return base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        var user = new IdentityUser { UserName = registerModel.Username, Email = registerModel.Email };
        var result = await _userManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            await _signInManager.SignInAsync(user, isPersistent: false);
            //Log((int)LogEnums.ActionEnum.Register, user.Id);
            NavManager.NavigateTo("/Index");
        }

    }
}

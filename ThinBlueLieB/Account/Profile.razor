@page "/Account/Profile"
@using System.Diagnostics
@using Syncfusion.Blazor.ProgressBar
@using Syncfusion.Blazor.Navigations
@using Microsoft.AspNetCore.Identity
@using DataAccessLibrary.UserModels
@inject UserManager<ApplicationUser> userManager
@attribute [Authorize]
<style>
    ul {
        list-style-type: none;
    }
    li a {
        color: dimgray;
        font-size: 1rem;
    }
        li a:hover {
            color: black;
        }
</style>
<div class="mx-md-5 mt-3">
    <SfSidebar Width="160px" Animate="false" EnableGestures="false" Target=".main-content" MediaQuery="(min-width:600px)">
        <ChildContent>
            <div class="main-menu nav-with-bar mt-1">
                <ul class="mt-3">
                    <li>
                        <NavLink class="nav-link" href="/Account/Profile">Profile</NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="/Account/ReviewEdits">Review Edits</NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="/Account/Reputation">Reputation</NavLink>
                    </li>
                </ul>
            </div>
        </ChildContent>
    </SfSidebar>
    <div class="main-content">
        <div class="sidebar-content pl-2">
            <div class="d-flex justify-content-between border-bottom">
                <div class="pl-4 d-flex align-items-end" style="font-size:1.2rem;">
                    @userState.User.Identity.Name
                    Member Since: Inception
                </div>
                <div class="d-flex">
                    <div class="d-flex align-items-end mb-1">
                        <div>
                            @*<span>Trusted User</span>*@
                            <span>Reputation</span>
                        </div>
                    </div>
                    <div class="d-inline-block">
                        <SfProgressBar @ref="Reputation" Type="ProgressType.Linear" Height="40"
                                       Width="100%" ID="Percentage"
                                       TrackThickness="24"
                                       ProgressThickness="24" Role="ModeType.Success"
                                       ShowProgressValue="true"
                                       Value="40" Minimum="0" Maximum="100"
                                       Theme="@ProgressTheme.Bootstrap4">
                            <ProgressBarLabelStyle Text="40/150" TextAlignment="TextAlignmentType.Center" Color="#FFFFFF" />
                            <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                        </SfProgressBar>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <p>
                        <strong>Submissions:</strong>
                    </p>
                    <p>
                        <strong>Edits Accepted:</strong>
                    </p>
                </div>
                <div lass="col-6">
                    <p>
                        <strong>Flags:</strong>
                    </p>
                    <p>
                        <strong>Votes Cast:</strong>
                    </p>
                </div>
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Uploaded</th>
                        <th scope="col">Date</th>
                        <th scope="col">Title</th>
                        <th scope="col">Public</th>

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">1</th>
                        <td>10/18/2020</td>
                        <td>6/4/2020</td>
                        <td>This is an example title</td>
                        <td>Delete</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@code {
    SfProgressBar Reputation;

    List<Timelineinfo> Events { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; }
    private AuthenticationState userState;
    ApplicationUser User;
    protected override async Task OnInitializedAsync()
    {
        userState = await AuthState;
        User = await userManager.GetUserAsync(userState.User);
    }

    //users table
    //  Date Joined --Member Since
    //  Reputation


    //Accepted Edits: Count(edithistory where userId = userId and Confirmed = 1)
    //Flags: Count(flags where UserId = userid)
    //Submissions: select Count(distinct IdTimelineinfo from edithistory Where userId = userId)
    //    Gets submissions that have even been turned public
    // Votes Cast: select Count(editvotes where userId = userId);

}

@page "/Resources"
@using Syncfusion.Blazor.Navigations
<link rel="stylesheet" href="~/css/content.css">
<div class="header-image" style="background-image: url(Assets/Protests-Wallpaper.jpg) !important;">
    <div class="my-auto text-center">
        <h1 style="font-family: MillerItalic, Georgia, serif; font-size: 4em;" class="text-primary font-italic">Resources</h1>
    </div>
</div>
<div id="wrapper">
    <div class="col-lg-12 col-sm-12 col-md-12">
        <!--header-section  declaration -->
        @*<div class="main-header" id="header-section">
                <ul class="header-list">
                    <li class="float-left header-style icon-menu" id="hamburger" @onclick="@Toggle"></li>
                    <li class="float-left header-style nav-pane"><b>Navigation Pane</b></li>
                    <li class="header-style float-right support border-left"><b>Support</b></li>
                </ul>
            </div>*@
        <!-- end of header-section -->
        <!-- sidebar element declaration -->
        <SfSidebar HtmlAttributes="@HtmlAttribute" Width="290px" EnableGestures="false" Animate="false" Target=".main-content" @ref="Sidebar" MediaQuery="(min-width:600px)">
            <ChildContent>
                <div class="main-menu">
                    <div class="table-content">
                        @*<input type="text" placeholder="Search..." class="search-icon">*@
                        <p class="main-menu-header sidebar-heading">Navigation</p>
                    </div>
                    <div>
                        <SfTreeView CssClass="main-treeview" @ref="TreeView" ExpandOn="@Expand" TValue="TreeData">
                            <TreeViewFieldsSettings Id="nodeId" Text="nodeText" IconCss="iconCss" DataSource="treedata" HasChildren="hasChild" ParentID="pid">
                            </TreeViewFieldsSettings>
                        </SfTreeView>
                    </div>
                </div>
            </ChildContent>
        </SfSidebar>
        <SfSidebar Animate="false" Width="200px" EnableGestures="false" Position="SidebarPosition.Right" Target=".main-content" MediaQuery="(min-width:600px)">
            <ChildContent>
                <div class="p-3 mt-2">
                    <div>
                        <h6>To learn more about the issue visit:</h6>
                        <div class="d-flex justify-content-center">
                            <a class="btn btn-sm btn-outline-info" href="/Resources" role="button">Resources</a>
                        </div>
                    </div>
                    <div>
                        <h6>To see the severity of the problem look at:</h6>
                        <div class="d-flex justify-content-center">
                            <a class="btn btn-sm btn-outline-info" href="/Events" role="button">Events</a>
                        </div>
                    </div>
                </div>
            </ChildContent>
        </SfSidebar>
        <!-- end of sidebar element -->
        <!-- main-content declaration -->
        <div class="main-content" id="main-text">
            <div class="sidebar-content">
                <div class="pr-0" style="min-height:1500px;">
                    <div class="pt-3 pb-2 mb-0 pl-2">
                        <h4>Purpose</h4>
                        <p>Here we have listed various books, podcasts, artists, and more that we belive are great ways to learn more about the issue.</p>
                    </div>
                    <hr class="blueline nogap" />
                    <br />
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    SfTreeView<TreeData> TreeView;
    SfSidebar Sidebar;
    public ExpandAction Expand = ExpandAction.Click;
    Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>()
{
        {"class", "sidebar-treeview" }
    };
    //public void Toggle()
    //{
    //    this.Sidebar.Toggle();
    //}
    public class TreeData
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string iconCss { get; set; }
        public bool hasChild { get; set; }
        public string pid { get; set; }
    }
    private List<TreeData> treedata = new List<TreeData>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        treedata.Add(new TreeData { nodeId = "01", nodeText = "Books", iconCss = "icon-microchip icon", hasChild = true });

        treedata.Add(new TreeData { nodeId = "02", nodeText = "Podcasts", iconCss = "icon-thumbs-up-alt icon", hasChild = true });

        treedata.Add(new TreeData { nodeId = "03", nodeText = "Public Figures", iconCss = "icon-docs icon", hasChild = true });

        treedata.Add(new TreeData { nodeId = "04", nodeText = "Musicians", iconCss = "icon-th icon", hasChild = true });
        treedata.Add(new TreeData { nodeId = "04-01", nodeText = "Kendrick Lamar", iconCss = "icon-circle-thin icon", pid = "04" });

        treedata.Add(new TreeData { nodeId = "05", nodeText = "Artists", iconCss = "icon-code icon", hasChild = true });

    }
}

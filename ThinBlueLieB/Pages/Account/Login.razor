@page "/Account/Login"
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager
@inject NavigationManager NavManager
@using ThinBlueLieB.Models;


<div class="container-fluid h-100 row nogap">
    <div class="card border-secondary mx-md-auto col-lg-3 col-md-4 p-0 mx-5" style="margin-top:100px;">
        <div class="card-header">
            Login
            <a class="float-right" href="/Account/Register">Register</a>
        </div>
        <EditForm Model="@loginModel">
            <div class="card-body text-secondary">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="Email" class="control-label">Email</label>
                    <InputText @bind-Value="loginModel.Email" class="form-control" />
                    <ValidationMessage For="@(()=> loginModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="Password" class="control-label">Password</label>
                    <InputText @bind-Value="loginModel.Password" class="form-control" />
                    <ValidationMessage For="@(()=> loginModel.Password)" />
                </div>
                <div class="form- mb-0">
                    <InputCheckbox @bind-Value="loginModel.RememberMe" />  
                    <label for="RememberMe">Remember Me</label>
                </div>
                <button type="submit" class="btn btn-primary mb-1" style="float:right">Login</button>
            </div>
        </EditForm>
        <div class="card-footer">            
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleValidSubmit()
    {
        var signedUser = await _userManager.FindByEmailAsync(loginModel.Email);
        var result = await _signInManager.PasswordSignInAsync(signedUser, loginModel.Password, loginModel.RememberMe, false);
        if (result.Succeeded)
        {
            //Log((int)LogEnums.ActionEnum.Login, signedUser.Id);
            NavManager.NavigateTo("/Index");
        }
    }
}
